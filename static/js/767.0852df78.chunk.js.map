{"version":3,"file":"static/js/767.0852df78.chunk.js","mappings":"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","sources":["components/common components/defaultLoginFormInput/InputField.jsx","webpack://my-app/./src/components/dialogs/Dialogs.module.css?04a9","webpack://my-app/./src/components/dialogs/messages/message/Message.module.css?6d2e","components/dialogs/messages/message/Message.jsx","webpack://my-app/./src/components/dialogs/messages/MessageArea.module.css?1527","webpack://my-app/./src/components/dialogs/messages/addMessageForm/AddMessageForm.module.css?3ca4","components/dialogs/messages/addMessageForm/AddMessageForm.jsx","webpack://my-app/./src/components/dialogs/Users/User/User.module.css?255f","components/dialogs/Users/User/User.jsx","webpack://my-app/./src/components/dialogs/Users/Users.module.css?933e","components/dialogs/Users/Users.jsx","components/dialogs/messages/MessageArea.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.js","components/profile/posts/profileInfo/userInfoForm/UserInfoForm.jsx","components/profile/posts/profileInfo/userInfo/UserInfo.jsx","hoc/withAuthRedirect.js","schemas/yupSchema.js","webpack://my-app/./src/components/profile/posts/profileInfo/userInfo/UserInfo.module.css?df53"],"sourcesContent":["import React from \"react\";\r\nimport s from '../../../components/profile/posts/profileInfo/userInfo/UserInfo.module.css';\r\nimport '../../../common_styles/validationErrors.css';\r\nimport '../../../common_styles/input.css';\r\n\r\nconst InputField = ({ id, name, type,\r\n    placeholder = null, handleChange, handleBlur,\r\n    errors, touched, values, text = '' }) => {\r\n    let elem;\r\n\r\n    switch (type) {\r\n        case \"checkbox\": {\r\n            elem = <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                onChange={handleChange}\r\n                checked={values[name]}\r\n                placeholder={placeholder}\r\n                onBlur={handleBlur}\r\n            />;\r\n            break;\r\n        }\r\n\r\n        case 'password':\r\n        case 'email':\r\n        case 'text':\r\n        case 'textarea':\r\n        default:\r\n            elem = <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                onChange={handleChange}\r\n                value={values[name]}\r\n                placeholder={placeholder}\r\n                onBlur={handleBlur}\r\n                className={errors[name] && touched[name] ? 'inputError' : 'inputField'}\r\n                maxLength={49}\r\n            />;\r\n            break;\r\n    }\r\n    return (\r\n        <div className={s.profileInfoList}>\r\n            <label\r\n                className={s.title}\r\n                htmlFor={type}>\r\n                {text}\r\n            </label>\r\n            {elem}\r\n            {errors[name] && touched[name] &&\r\n                <div className='errorMessage'>{errors[name]}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__O6h14\",\"demo\":\"Dialogs_demo__WgRtJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__-l2Lv\"};","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = ({ message }) => {\r\n    return <div className={s.message}>\r\n        {message}\r\n    </div>;\r\n};\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"MessageArea_messages__XTGMb\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"AddMessageForm_inputWrapper__qtb4z\"};","import React from \"react\";\r\nimport '../../../../common_styles/button.css';\r\nimport { useFormik } from \"formik\";\r\nimport { basicAddMessageSchema } from \"../../../../schemas/yupSchema\";\r\nimport InputField from \"../../../common components/defaultLoginFormInput/InputField\";\r\nimport { DefautButton } from \"../../../profile/posts/profileInfo/userInfoForm/UserInfoForm\";\r\nimport s from './AddMessageForm.module.css'\r\n\r\nconst AddMessageForm = ({ addMessage }) => {\r\n\r\n    const onSubmit = (values, actions) => {\r\n        addMessage(values.addMessageField);\r\n        actions.resetForm();\r\n    };\r\n\r\n    const { values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        initialValues: {\r\n            addMessageField: '',\r\n        },\r\n        validationSchema: basicAddMessageSchema,\r\n        onSubmit,\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <div className={s.inputWrapper}>\r\n                <InputField\r\n                    id=\"addMessageField\"\r\n                    name=\"addMessageField\"\r\n                    type=\"text\"\r\n                    placeholder={\"Your message:)\"}\r\n                    handleChange={handleChange}\r\n                    handleBlur={handleBlur}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    values={values}\r\n                />\r\n            </div>\r\n            <DefautButton text='Send!' isSubmitting={isSubmitting} />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddMessageForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"linkWrapper\":\"User_linkWrapper__HXlqb\",\"nonActiveUser\":\"User_nonActiveUser__zABtx\",\"activeUser\":\"User_activeUser__z0OeQ\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './User.module.css';\r\n\r\nconst User = ({ index, name }) => {\r\n    return <div className={s.linkWrapper}>\r\n        <NavLink\r\n            className={({ isActive }) => `${isActive ? s.activeUser : s.nonActiveUser}`}\r\n            to={`/messages/${index}`}>\r\n            {name}\r\n        </NavLink>\r\n    </div>;\r\n};\r\n\r\nexport default User;","// extracted by mini-css-extract-plugin\nexport default {\"dialogUsers\":\"Users_dialogUsers__Zrjo5\",\"mainAbsractWrapper\":\"Users_mainAbsractWrapper__xLq37\"};","import React from \"react\";\r\nimport User from \"./User/User\";\r\nimport s from './Users.module.css';\r\nimport { MainAbstract } from \"../../profile/posts/profileInfo/userInfo/UserInfo\";\r\n\r\nconst Users = ({ users }) => {\r\n    return <div className={s.dialogUsers}>\r\n        <DialogsMainAbstrWrapper text='Friends' />\r\n        {\r\n            users.map((obj, i) => {\r\n                return <User key={obj.id} index={i} name={obj.name} />\r\n            })\r\n        }\r\n    </div>;\r\n};\r\n\r\nexport const DialogsMainAbstrWrapper = ({ text }) => {\r\n    return <div className={s.mainAbsractWrapper}>\r\n        <MainAbstract text={text} />\r\n    </div>\r\n};\r\n\r\nexport default Users;","import React from \"react\";\r\nimport Message from \"./message/Message\";\r\nimport s from './MessageArea.module.css';\r\nimport AddMessageForm from \"./addMessageForm/AddMessageForm\";\r\nimport { DialogsMainAbstrWrapper } from \"../Users/Users\";\r\n\r\nconst MessageArea = ({ messagesState, addMessage }) => {\r\n    return <div className={s.messages}>\r\n        <DialogsMainAbstrWrapper text='Messages' />\r\n        {\r\n            messagesState.messages.map((obj, i) => {\r\n                return <Message\r\n                    key={obj.id}\r\n                    message={messagesState.messages[i].message}\r\n                />;\r\n            })\r\n        }\r\n        <AddMessageForm addMessage={addMessage} />\r\n    </div>;\r\n};\r\n\r\nexport default MessageArea;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport MessageArea from \"./messages/MessageArea\";\r\nimport Users from \"./Users/Users\";\r\nimport '../../common_styles/demoMessageAlert.css';\r\n\r\nconst Dialogs = ({ usersState, messagesState, createNewMessage, updateTextarea }) => {\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <Users users={usersState.userNames} />\r\n                <MessageArea\r\n                    messagesState={messagesState}\r\n                    addMessage={createNewMessage}\r\n                    updateMessageTextarea={updateTextarea} />\r\n            </div>\r\n            <div className={`demoMessageAlert ${s.demo}`}>\r\n                Demo xxD\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { createNewMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messagesState: state.dialogsReducer.messagesWrapper,\r\n        usersState: state.dialogsReducer.usersWrapper,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { createNewMessage }),\r\n    withAuthRedirect,\r\n)(Dialogs);","import React from \"react\";\r\nimport s from '../userInfo/UserInfo.module.css';\r\nimport { useFormik } from 'formik';\r\nimport { basicProfileInfoChanger } from \"../../../../../schemas/yupSchema\";\r\nimport InputField from \"../../../../common components/defaultLoginFormInput/InputField\";\r\nimport '../../../../../common_styles/button.css';\r\nimport '../../../../../common_styles/validationErrors.css';\r\nimport { MainAbstract } from \"../userInfo/UserInfo\";\r\n\r\nconst UserInfoForm = ({ profilePage, setEditMode, saveProfileChanges }) => {\r\n    const onSubmit = (values, { setSubmitting, setStatus }) => {\r\n        setSubmitting(true);\r\n        saveProfileChanges(values, setStatus, setSubmitting)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const { values, status, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            fullName: profilePage.fullName || '',\r\n            aboutMe: profilePage.aboutMe || '',\r\n            lookingForAJob: profilePage.lookingForAJob || false,\r\n            lookingForAJobDescription: profilePage.lookingForAJobDescription || '',\r\n            contacts: {\r\n                facebook: profilePage.contacts.facebook || '',\r\n                website: profilePage.contacts.website || '',\r\n                vk: profilePage.contacts.vk || '',\r\n                twitter: profilePage.contacts.twitter || '',\r\n                instagram: profilePage.contacts.instagram || '',\r\n                youtube: profilePage.contacts.youtube || '',\r\n                github: profilePage.contacts.github || '',\r\n                mainLink: profilePage.contacts.mainLink || '',\r\n            },\r\n        },\r\n        validationSchema: basicProfileInfoChanger,\r\n        onSubmit,\r\n    });\r\n\r\n    return <form onSubmit={handleSubmit} autoComplete=\"off\" className={s.profileInfo}>\r\n        <MainAbstract />\r\n        <InputField\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            type=\"text\"\r\n            placeholder={\"Enter nickName\"}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"Nickname: \"\r\n        />\r\n        <InputField\r\n            id=\"aboutMe\"\r\n            name=\"aboutMe\"\r\n            type=\"text\"\r\n            placeholder={\"Enter smth about you\"}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"General info about me: \"\r\n        />\r\n        <InputField\r\n            id=\"lookingForAJob\"\r\n            name=\"lookingForAJob\"\r\n            type=\"checkbox\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"Looking for a job? \"\r\n        />\r\n        <InputField\r\n            id=\"lookingForAJobDescription\"\r\n            name=\"lookingForAJobDescription\"\r\n            type=\"text\"\r\n            placeholder={\"Describe the job\"}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"Info about the job: \"\r\n        />\r\n        <div className={s.profileInfoList}>\r\n            <span className={s.title}>My contacts: </span>\r\n            {\r\n                Object.keys(profilePage.contacts).map((key, i) => {\r\n                    return <div className={s.contact} key={i}>\r\n                        {key} - <input\r\n                            id={key}\r\n                            name={`contacts.${key}`}\r\n                            type=\"text\"\r\n                            placeholder={`Input ${key}`}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={errors.contacts?.[key] && touched.contacts?.[key] ? 'inputError' : 'inputField'}\r\n                            value={values.contacts[key]}\r\n                            maxLength={50}\r\n                        />\r\n                        {\r\n                            errors.contacts?.[key] &&\r\n                            touched.contacts?.[key] &&\r\n                            <div className='errorMessage'>{errors.contacts?.[key]}</div>\r\n                        }\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n        <ServerErrorMessage status={status} />\r\n        <DefautButton text='Save' isSubmitting={isSubmitting} />\r\n    </form>;\r\n};\r\n\r\nexport const DefautButton = ({ text, isSubmitting }) => {\r\n    return <button\r\n        className=\"defaultWebsiteButton\"\r\n        disabled={isSubmitting}\r\n        type=\"submit\">\r\n        {text}\r\n    </button>\r\n};\r\n\r\nexport const ServerErrorMessage = ({ status }) => {\r\n    return status && <div className={'errorMessage'}>\r\n        {status}\r\n    </div>;\r\n};\r\n\r\nexport default UserInfoForm;","import React from \"react\";\r\nimport s from './UserInfo.module.css';\r\nimport '../../../../../common_styles/button.css';\r\n\r\nconst UserInfo = ({ profilePage, isOwner, setEditMode }) => {\r\n    const onEditUserInfoClick = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    return <div className={s.profileInfo}>\r\n        <MainAbstract text='Profile Information' />\r\n        <ProfileInfoList\r\n            text='Nickname:'\r\n            listValue={profilePage.fullName || 'none:)'}\r\n        />\r\n        <ProfileInfoList\r\n            text='General info about me:'\r\n            listValue={profilePage.aboutMe || 'none:)'}\r\n        />\r\n        <ProfileInfoList\r\n            text=\"Info about the job:\"\r\n            listValue={profilePage.lookingForAJob ? profilePage.lookingForAJobDescription : 'none:)'}\r\n        />\r\n        <ProfileInfoList\r\n            text=\"My contacts:\"\r\n            listValue={\r\n                Object.keys(profilePage.contacts).map((key, i) => {\r\n                    return <Contact key={i} contactTitle={key} contactValue={profilePage.contacts[key]} />;\r\n                })\r\n            }\r\n        />\r\n        {isOwner &&\r\n            <button\r\n                onClick={onEditUserInfoClick}\r\n                className=\"defaultWebsiteButton\"\r\n            >\r\n                Edit\r\n            </button>}\r\n    </div>;\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}>\r\n        {contactTitle} - {contactValue || 'none:)'}\r\n    </div>;\r\n};\r\n\r\nconst ProfileInfoList = ({ text, listValue }) => {\r\n    return <div className={s.profileInfoList}>\r\n        <span className={s.title}>{text} </span>{listValue}\r\n    </div>;\r\n};\r\n\r\nexport const MainAbstract = ({ text }) => {\r\n    return <div className={s.mainAbstract}>\r\n        {text}\r\n    </div>;\r\n};\r\n\r\nexport default UserInfo;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />;\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};","import * as yup from 'yup';\r\n\r\nexport const basicLoginSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email('Please enter the valid email.')\r\n        .required('Email required.'),\r\n    password: yup\r\n        .string()\r\n        .min(3, 'Password is too short - should be 3 chars minimum.')\r\n        .required('Password required.'),\r\n    rememberMe: yup\r\n        .boolean(),\r\n});\r\n\r\nexport const basicAddPostSchema = yup.object().shape(\r\n    {\r\n        addPostField: yup\r\n            .string()\r\n            .max(50, 'Text is too long - should be 50 chars maximum.')\r\n            .required('Required.')\r\n    },\r\n);\r\n\r\nexport const basicAddMessageSchema = yup.object().shape({\r\n    addMessageField: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.')\r\n        .required('Required.')\r\n});\r\n\r\nexport const basicProfileInfoChanger = yup.object().shape({\r\n    fullName: yup\r\n        .string()\r\n        .max(15, 'Nickname is too long - should be 15 chars maximum.'),\r\n    aboutMe: yup\r\n        .string()\r\n        .max(50, 'General info is too long - should be 50 chars maximum.'),\r\n    lookingForAJob: yup\r\n        .boolean(),\r\n    lookingForAJobDescription: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.'),\r\n});\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"UserInfo_profileInfo__Pkm31\",\"profileInfoList\":\"UserInfo_profileInfoList__XHyDv\",\"mainAbstract\":\"UserInfo_mainAbstract__FXHld\",\"title\":\"UserInfo_title__p1pPo\",\"contact\":\"UserInfo_contact__-ibNS\"};"],"names":["_ref","elem","id","name","type","_ref$placeholder","placeholder","handleChange","handleBlur","errors","touched","values","_ref$text","text","_jsx","onChange","checked","onBlur","value","className","maxLength","_jsxs","s","children","htmlFor","message","addMessage","_useFormik","useFormik","initialValues","addMessageField","validationSchema","basicAddMessageSchema","onSubmit","actions","resetForm","isSubmitting","handleSubmit","autoComplete","InputField","DefautButton","index","NavLink","_ref2","isActive","concat","to","DialogsMainAbstrWrapper","MainAbstract","users","map","obj","i","User","messagesState","messages","Message","AddMessageForm","usersState","createNewMessage","updateTextarea","_Fragment","Users","userNames","MessageArea","updateMessageTextarea","compose","connect","state","dialogsReducer","messagesWrapper","usersWrapper","withAuthRedirect","Dialogs","_ref3","disabled","ServerErrorMessage","_ref4","status","profilePage","setEditMode","saveProfileChanges","enableReinitialize","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","basicProfileInfoChanger","setSubmitting","setStatus","then","catch","Object","keys","key","_errors$contacts","_touched$contacts","_errors$contacts2","_touched$contacts2","_errors$contacts3","Contact","contactTitle","contactValue","ProfileInfoList","listValue","isOwner","onClick","mapStateToProps","isAuth","authReducer","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","this","props","_objectSpread","Navigate","React","basicLoginSchema","yup","shape","email","required","password","min","rememberMe","basicAddPostSchema","addPostField","max"],"sourceRoot":""}