{"version":3,"file":"static/js/454.ef8e5b56.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/common components/defaultLoginFormInput/InputField.module.css?3541","components/common components/defaultLoginFormInput/InputField.jsx","components/profile/posts/Posts.module.css","webpack://my-app/./src/components/profile/posts/post/Post.module.css?3dbd","components/profile/posts/post/Post.jsx","webpack://my-app/./src/components/profile/posts/addPostForm/AddPostForm.module.css?0dd8","components/profile/posts/addPostForm/AddPostForm.jsx","components/profile/posts/Posts.jsx","components/profile/posts/PostsContainer.js","webpack://my-app/./src/components/profile/posts/profileInfo/ProfileInfo.module.css?4253","webpack://my-app/./src/components/profile/posts/profileInfo/userInfo/UserInfo.module.css?df53","components/profile/posts/profileInfo/userInfo/UserInfo.jsx","webpack://my-app/./src/components/profile/posts/profileInfo/userInfoForm/UserInfoForm.module.css?f6dc","components/profile/posts/profileInfo/userInfoForm/UserInfoForm.jsx","components/profile/posts/profileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/profile/Profile.module.css?5246","components/profile/profileStatus/ProfileStatus.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.js","hoc/withAuthRedirect.js","schemas/yupSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"InputField\":\"InputField_InputField__-AAGd\",\"inputError\":\"InputField_inputError__IqH1J\",\"errorMessage\":\"InputField_errorMessage__b59HU\"};","import React from \"react\";\r\nimport s from './InputField.module.css';\r\n\r\nconst InputField = ({ id, name, type, placeholder, handleChange, handleBlur, errors, touched, values, text }) => {\r\n    return (\r\n        <span className={s.InputField}>\r\n            <label htmlFor={type}>{text} </label>\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                onChange={handleChange}\r\n                value={values[name]}\r\n                placeholder={placeholder}\r\n                onBlur={handleBlur}\r\n                className={errors[name] && touched[name] ? s.inputError : ''} />\r\n            {errors[name] && touched[name] && <p className={s.errorMessage}>{errors[name]}</p>}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default InputField;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Post_avatar__wYY9I\",\"postText\":\"Post_postText__4Lm6J\",\"likesItem\":\"Post_likesItem__m3xyx\",\"postWrapper\":\"Post_postWrapper__5ROJz\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport defaultSmallUserPhoto from '../../../../resources/images/defaultSmallUserPhoto.jpeg';\r\n\r\nconst Post = ({ smallProfilePhoto, likesCount, text }) => {\r\n    return <div className={s.postWrapper}>\r\n        <div>\r\n            <img\r\n                src={smallProfilePhoto ? smallProfilePhoto : defaultSmallUserPhoto}\r\n                alt='profile avatar'\r\n                className={s.avatar} />\r\n            <span className={s.postText}>{text} </span>\r\n        </div>\r\n        <div className={s.likesItem}> likes: {likesCount}</div>\r\n    </div>;\r\n};\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"addPostFieldError\":\"AddPostForm_addPostFieldError__gHvw-\",\"errorMessage\":\"AddPostForm_errorMessage__xzbi9\"};","import React from \"react\";\r\nimport s from './AddPostForm.module.css';\r\nimport { useFormik } from \"formik\";\r\nimport { basicAddPostSchema } from \"../../../../schemas/yupSchema\";\r\n\r\nexport const AddPostForm = ({ addPost }) => {\r\n    const onSubmit = (values, actions) => {\r\n        addPost(values.addPostField);\r\n        actions.resetForm();\r\n    };\r\n\r\n    const { values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        initialValues: {\r\n            addPostField: '',\r\n        },\r\n        validationSchema: basicAddPostSchema,\r\n        onSubmit,\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <div className={s.textareaField}>\r\n                <textarea\r\n                    name=\"addPostField\"\r\n                    id=\"addPostField\"\r\n                    type=\"textarea\"\r\n                    onChange={handleChange}\r\n                    value={values.addPostField}\r\n                    placeholder=\"Share your news:)\"\r\n                    onBlur={handleBlur}\r\n                    className={errors.addPostField && touched.addPostField ? s.addPostFieldError : ''}\r\n                >\r\n                </textarea>\r\n                {errors.addPostField && touched.addPostField && <p className={s.errorMessage}>{errors.addPostField}</p>}\r\n            </div>\r\n            <div>\r\n                <button disabled={isSubmitting} type=\"submit\">add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from './Posts.module.css'\r\nimport Post from \"./post/Post\";\r\nimport { AddPostForm } from \"./addPostForm/AddPostForm\";\r\n\r\nconst Posts = ({ addPost, posts, smallProfilePhoto }) => {\r\n    return <div className={s.posts}>\r\n        My posts\r\n        <AddPostForm addPost={addPost} />\r\n        {\r\n            posts.map((obj, i) => {\r\n                return <Post\r\n                    key={obj.id}\r\n                    smallProfilePhoto={smallProfilePhoto}\r\n                    text={obj.text}\r\n                    likesCount={posts[i].likesCount}\r\n                />\r\n            })\r\n        }\r\n    </div>;\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPost })(Posts);","// extracted by mini-css-extract-plugin\nexport default {\"largeProfilePhoto\":\"ProfileInfo_largeProfilePhoto__YuZFa\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactsField\":\"UserInfo_contactsField__XTWNR\",\"profileInfo\":\"UserInfo_profileInfo__IJmn7\"};","import React from \"react\";\r\nimport s from './UserInfo.module.css';\r\n\r\nconst UserInfo = ({ profilePage, isOwner, setEditMode }) => {\r\n    const onEditUserInfoClick = (event) => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    return <div className={s.profileInfo}>\r\n        <div>\r\n            Profile Information:\r\n        </div>\r\n        <div>\r\n            Nickname: {profilePage.fullName || 'none:)'}\r\n        </div>\r\n        <div>\r\n            General info about me: {profilePage.aboutMe || 'none:)'}\r\n        </div>\r\n        <div>\r\n            Info about the job i'm looking for:\r\n            {profilePage.lookingForAJob ? profilePage.lookingForAJobDescription : 'none:)'}\r\n        </div>\r\n        <div className={s.contactsField}>\r\n            My contacts: {Object.keys(profilePage.contacts).map((key, i) => {\r\n                return <Contact key={i} contactTitle={key} contactValue={profilePage.contacts[key]} />;\r\n            })}\r\n        </div>\r\n        {isOwner && <button onClick={onEditUserInfoClick}>Edit</button>}\r\n    </div>;\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}>\r\n        {contactTitle} - {contactValue || 'none:)'}\r\n    </div>;\r\n};\r\n\r\nexport default UserInfo;","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"UserInfoForm_profileInfo__w4-cw\",\"errorMessage\":\"UserInfoForm_errorMessage__LZ5L8\"};","import React from \"react\";\r\nimport s from './UserInfoForm.module.css';\r\nimport { useFormik } from 'formik';\r\nimport { basicProfileInfoChanger } from \"../../../../../schemas/yupSchema\";\r\nimport InputField from \"../../../../common components/defaultLoginFormInput/InputField\";\r\n\r\nconst UserInfoForm = ({ profilePage, setEditMode, saveProfileChanges }) => {\r\n    const onSubmit = (values, { setSubmitting, setStatus }) => {\r\n        setSubmitting(true);\r\n        saveProfileChanges(values, setStatus, setSubmitting)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const { values, status, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            fullName: profilePage.fullName || '',\r\n            aboutMe: profilePage.aboutMe || '',\r\n            lookingForAJob: profilePage.lookingForAJob || false,\r\n            lookingForAJobDescription: profilePage.lookingForAJobDescription || '',\r\n            contacts: {\r\n                facebook: profilePage.contacts.facebook || '',\r\n                website: profilePage.contacts.website || '',\r\n                vk: profilePage.contacts.vk || '',\r\n                twitter: profilePage.contacts.twitter || '',\r\n                instagram: profilePage.contacts.instagram || '',\r\n                youtube: profilePage.contacts.youtube || '',\r\n                github: profilePage.contacts.github || '',\r\n                mainLink: profilePage.contacts.mainLink || '',\r\n            },\r\n        },\r\n        validationSchema: basicProfileInfoChanger,\r\n        onSubmit,\r\n    });\r\n\r\n    return <form onSubmit={handleSubmit} autoComplete=\"off\" className={s.profileInfo}>\r\n        <div>\r\n            Profile Information:\r\n        </div>\r\n        <div>\r\n            <InputField\r\n                id=\"fullName\"\r\n                name=\"fullName\"\r\n                type=\"text\"\r\n                placeholder={\"Enter nickName\"}\r\n                handleChange={handleChange}\r\n                handleBlur={handleBlur}\r\n                errors={errors}\r\n                touched={touched}\r\n                values={values}\r\n                text=\"Nickname: \"\r\n            />\r\n        </div>\r\n        <div>\r\n            <InputField\r\n                id=\"aboutMe\"\r\n                name=\"aboutMe\"\r\n                type=\"textarea\"\r\n                placeholder={\"Enter smth about you\"}\r\n                handleChange={handleChange}\r\n                handleBlur={handleBlur}\r\n                errors={errors}\r\n                touched={touched}\r\n                values={values}\r\n                text=\"General info about me: \"\r\n            />\r\n        </div>\r\n        <div>\r\n            <label>\r\n                Looking for a job?\r\n                <input\r\n                    id=\"lookingForAJob\"\r\n                    name=\"lookingForAJob\"\r\n                    type=\"checkbox\"\r\n                    onChange={handleChange}\r\n                    checked={values.lookingForAJob}\r\n                    onBlur={handleBlur}\r\n                    className={errors.lookingForAJob && touched.lookingForAJob ? s.inputError : ''}\r\n                />\r\n            </label>\r\n        </div>\r\n        <div>\r\n            <InputField\r\n                id=\"lookingForAJobDescription\"\r\n                name=\"lookingForAJobDescription\"\r\n                type=\"textarea\"\r\n                placeholder={\"Describe the job\"}\r\n                handleChange={handleChange}\r\n                handleBlur={handleBlur}\r\n                errors={errors}\r\n                touched={touched}\r\n                values={values}\r\n                text=\"Info about the job i'm looking for: \"\r\n            />\r\n        </div>\r\n        <div className={s.contactsField}>\r\n            My contacts:\r\n            {\r\n                Object.keys(profilePage.contacts).map((key, i) => {\r\n                    return <div key={i}>\r\n                        {key} - <input\r\n                            id={key}\r\n                            name={`contacts.${key}`}\r\n                            type=\"text\"\r\n                            placeholder={`Input ${key}`}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={errors.contacts?.[key] && touched.contacts?.[key] ? s.inputError : ''}\r\n                            value={values.contacts[key]}\r\n                        />\r\n                        {\r\n                            errors.contacts?.[key] &&\r\n                            touched.contacts?.[key] &&\r\n                            <p className={s.errorMessage}>{errors.contacts?.[key]}</p>\r\n                        }\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n        {\r\n            status &&\r\n            <div className={s.errorMessage}>\r\n                {status}\r\n            </div>\r\n        }\r\n        <button disabled={isSubmitting} type=\"submit\">Save</button>\r\n    </form>;\r\n};\r\n\r\nexport default UserInfoForm;","import React, { useState } from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport defaultLargeUserPhoto from '../../../../resources/images/defaultLargeUserPhoto.jpg';\r\nimport UserInfo from \"./userInfo/UserInfo\";\r\nimport UserInfoForm from \"./userInfoForm/UserInfoForm\";\r\n\r\nconst ProfileInfo = ({ profilePage, isOwner, saveProfilePhoto, saveProfileChanges }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onProfilePhotoChange = (event) => {\r\n        if (event.target.files.length) {\r\n            saveProfilePhoto(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return <div className={s.profileInfoAndPhoto}>\r\n        <img\r\n            className={s.largeProfilePhoto}\r\n            alt='large profile avatar'\r\n            src={profilePage.photos.large ? profilePage.photos.large : defaultLargeUserPhoto} />\r\n        {\r\n            isOwner &&\r\n            <input\r\n                type='file'\r\n                onChange={onProfilePhotoChange} />\r\n        }\r\n        {\r\n            editMode ?\r\n                <UserInfoForm\r\n                    saveProfileChanges={saveProfileChanges}\r\n                    setEditMode={setEditMode}\r\n                    profilePage={profilePage}\r\n                /> :\r\n                <UserInfo\r\n                    setEditMode={setEditMode}\r\n                    profilePage={profilePage}\r\n                    isOwner={isOwner}\r\n                />\r\n        }\r\n    </div>;\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"mainPic\":\"Profile_mainPic__9UGwW\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatus = React.memo(({ profileStatus, updateProfileStatus }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setProfileStatus] = useState(profileStatus);\r\n\r\n    useEffect(() => setProfileStatus(profileStatus), [profileStatus]);\r\n\r\n    const deactivateStatusField = () => {\r\n        setEditMode(false);\r\n        updateProfileStatus(status);\r\n    };\r\n\r\n    const activateStatusField = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const onChangeHandler = (event) => {\r\n        setProfileStatus(event.target.value);\r\n    };\r\n\r\n    let elem;\r\n\r\n    editMode ?\r\n        elem = <input\r\n            value={status ? status : ''}\r\n            onChange={onChangeHandler}\r\n            autoFocus={true}\r\n            onBlur={deactivateStatusField} /> :\r\n        elem = <span\r\n            onClick={activateStatusField}>\r\n            {profileStatus ? profileStatus : 'defaultStatus'}\r\n        </span>;\r\n\r\n    return <div>\r\n        {elem}\r\n    </div>;\r\n});\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport Preloader from \"../common components/preloader/Preloader\";\r\nimport PostsContainer from \"./posts/PostsContainer\";\r\nimport ProfileInfo from \"./posts/profileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css';\r\nimport ProfileStatus from \"./profileStatus/ProfileStatus\";\r\n\r\nconst Profile = ({ profilePage, profileStatus, updateProfileStatus, saveProfilePhoto, isOwner, saveProfileChanges }) => {\r\n    if (!profilePage) {\r\n        return <Preloader />;\r\n    }\r\n    return <main className={s.content}>\r\n        <ProfileStatus\r\n            profileStatus={profileStatus}\r\n            updateProfileStatus={updateProfileStatus}\r\n        />\r\n        <ProfileInfo\r\n            saveProfileChanges={saveProfileChanges}\r\n            isOwner={isOwner}\r\n            saveProfilePhoto={saveProfilePhoto}\r\n            profilePage={profilePage}\r\n        />\r\n        <PostsContainer smallProfilePhoto={profilePage.photos.small} />\r\n    </main>;\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfilePage, updateProfileStatus,\r\n    getProfileStatus, saveProfilePhoto,\r\n    saveProfileChanges\r\n} from '../../redux/profileReducer';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfilePage = () => {\r\n        let userId = this.props.param.userId;\r\n        if (!userId) userId = this.props.authorizedUserId;\r\n\r\n        this.props.getProfilePage(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfilePage();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.param.userId !== this.props.param.userId) {\r\n            this.refreshProfilePage();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            saveProfileChanges={this.props.saveProfileChanges}\r\n            saveProfilePhoto={this.props.saveProfilePhoto}\r\n            isOwner={!this.props.param.userId}\r\n            profileStatus={this.props.profileStatus}\r\n            updateProfileStatus={this.props.updateProfileStatus}\r\n            profilePage={this.props.profilePage} />;\r\n    }\r\n}\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nconst TakeParams = (props) => {\r\n    return <AuthRedirectComponent {...props} param={useParams()} />\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profileReducer.profilePage,\r\n        profileStatus: state.profileReducer.profileStatus,\r\n        authorizedUserId: state.authReducer.id,\r\n        isAuth: state.authReducer.isAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getProfilePage, updateProfileStatus,\r\n    getProfileStatus, saveProfilePhoto,\r\n    saveProfileChanges\r\n})(TakeParams);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />;\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};","import * as yup from 'yup';\r\n\r\nconst passwordRules = /(?=.*[0-9])/;\r\n\r\nexport const basicLoginSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email('Please enter the valid email.')\r\n        .required('Email required.'),\r\n    password: yup\r\n        .string()\r\n        .min(5, 'Password is too short - should be 5 chars minimum.')\r\n        .matches(passwordRules, { message: 'Please create a stronger password.' })\r\n        .required('Password required.'),\r\n    rememberMe: yup\r\n        .boolean(),\r\n});\r\n\r\nexport const basicAddPostSchema = yup.object().shape(\r\n    {\r\n        addPostField: yup\r\n            .string()\r\n            .max(50, 'Text is too long - should be 50 chars maximum.')\r\n            .required('Required.')\r\n    },\r\n);\r\n\r\nexport const basicAddMessageSchema = yup.object().shape({\r\n    addMessageField: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.')\r\n        .required('Required.')\r\n});\r\n\r\nexport const basicProfileInfoChanger = yup.object().shape({\r\n    fullName: yup\r\n        .string()\r\n        .max(15, 'Nickname is too long - should be 15 chars maximum.'),\r\n    aboutMe: yup\r\n        .string()\r\n        .max(50, 'General info is too long - should be 50 chars maximum.'),\r\n    lookingForAJob: yup\r\n        .boolean(),\r\n    lookingForAJobDescription: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.'),\r\n});\r\n\r\n"],"names":["_ref","id","name","type","placeholder","handleChange","handleBlur","errors","touched","values","text","_jsxs","className","s","children","htmlFor","_jsx","onChange","value","onBlur","smallProfilePhoto","likesCount","src","defaultSmallUserPhoto","alt","AddPostForm","addPost","_useFormik","useFormik","initialValues","addPostField","validationSchema","basicAddPostSchema","onSubmit","actions","resetForm","isSubmitting","handleSubmit","autoComplete","disabled","posts","map","obj","i","Post","connect","state","profileReducer","Posts","Contact","_ref2","contactTitle","contactValue","profilePage","isOwner","setEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","key","onClick","event","saveProfileChanges","enableReinitialize","facebook","website","vk","twitter","instagram","youtube","github","mainLink","basicProfileInfoChanger","setSubmitting","setStatus","then","catch","status","InputField","checked","_errors$contacts","_touched$contacts","_errors$contacts2","_touched$contacts2","_errors$contacts3","concat","saveProfilePhoto","_useState","useState","_useState2","_slicedToArray","editMode","photos","large","defaultLargeUserPhoto","target","files","length","UserInfoForm","UserInfo","React","profileStatus","updateProfileStatus","_useState3","_useState4","setProfileStatus","useEffect","elem","autoFocus","ProfileStatus","ProfileInfo","PostsContainer","small","Preloader","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","refreshProfilePage","userId","props","param","authorizedUserId","getProfilePage","getProfileStatus","_createClass","this","prevProps","Profile","AuthRedirectComponent","withAuthRedirect","authReducer","isAuth","_objectSpread","useParams","mapStateToProps","Component","RedirectComponent","Navigate","to","basicLoginSchema","yup","shape","email","required","password","min","matches","message","rememberMe","max","basicAddMessageSchema","addMessageField"],"sourceRoot":""}