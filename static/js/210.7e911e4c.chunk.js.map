{"version":3,"file":"static/js/210.7e911e4c.chunk.js","mappings":"+OACA,GAAiB,ECAjB,EAAyB,qBAAzB,EAAyD,uBAAzD,EAA4F,wBAA5F,EAAkI,0B,mBCgBlI,EAba,SAAHA,GAAiD,IAA3CC,EAAiBD,EAAjBC,kBAAmBC,EAAUF,EAAVE,WAAYC,EAAIH,EAAJG,KAC3C,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EACjCH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,OACIC,IAAKR,GAAwCS,EAC7CC,IAAI,iBACJN,UAAWC,KACfF,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAWC,SAAA,CAAEJ,EAAK,WAEvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,CAAC,WAASL,OAE9C,ECdA,GAAgB,kBAAoB,uCAAuC,aAAe,mC,oBCI7EU,EAAc,SAAHZ,GAAqB,IAAfa,EAAOb,EAAPa,QAM1BC,GAA0FC,EAAAA,EAAAA,IAAU,CAChGC,cAAe,CACXC,aAAc,IAElBC,iBAAkBC,EAAAA,GAClBC,SAVa,SAACC,EAAQC,GACtBT,EAAQQ,EAAOJ,cACfK,EAAQC,WACZ,IAEQF,EAAMP,EAANO,OAAQG,EAAMV,EAANU,OAAQC,EAAOX,EAAPW,QAASC,EAAYZ,EAAZY,aAAcC,EAAYb,EAAZa,aAAcC,EAAUd,EAAVc,WAAYC,EAAYf,EAAZe,aAQzE,OACIzB,EAAAA,EAAAA,MAAA,QAAMgB,SAAUS,EAAcC,aAAa,MAAKvB,SAAA,EAC5CH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,cAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,YACIuB,KAAK,eACLC,GAAG,eACHC,KAAK,WACLC,SAAUP,EACVQ,MAAOd,EAAOJ,aACdmB,YAAY,oBACZC,OAAQT,EACRvB,UAAWmB,EAAOP,cAAgBQ,EAAQR,aAAeX,EAAAA,kBAAsB,KAGlFkB,EAAOP,cAAgBQ,EAAQR,eAAgBT,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,aAAeC,SAAEiB,EAAOP,mBAE1FT,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQ8B,SAAUZ,EAAcO,KAAK,SAAQ1B,SAAC,iBAI9D,EClBA,EAjBc,SAAHP,GAA+C,IAAzCa,EAAOb,EAAPa,QAAS0B,EAAKvC,EAALuC,MAAOtC,EAAiBD,EAAjBC,kBAC7B,OAAOG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAQC,SAAA,CAAC,YAE5BC,EAAAA,EAAAA,KAACI,EAAW,CAACC,QAASA,IAElB0B,EAAMC,KAAI,SAACC,EAAKC,GACZ,OAAOlC,EAAAA,EAAAA,KAACmC,EAAI,CAER1C,kBAAmBA,EACnBE,KAAMsC,EAAItC,KACVD,WAAYqC,EAAMG,GAAGxC,YAHhBuC,EAAIT,GAKjB,MAGZ,ECVA,GAAeY,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHN,MAAOM,EAAMC,eAAeP,MAEpC,GAEwC,CAAE1B,QAAAA,EAAAA,IAA1C,CAAqDkC,GCTrD,GAAgB,kBAAoB,uCAAuC,YAAc,kC,oECqCzF,EAlCoB,SAAH/C,GAAoD,IAA9CgD,EAAWhD,EAAXgD,YAAaC,EAAOjD,EAAPiD,QAASC,EAAgBlD,EAAhBkD,iBAOzC,OAAO9C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,oBAAsBC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,OACIH,UAAWC,EAAAA,kBACXK,IAAI,uBACJF,IAAKuC,EAAYG,OAAOC,MAAQJ,EAAYG,OAAOC,MAAQC,IAE3DJ,IACAzC,EAAAA,EAAAA,KAAA,SACIyB,KAAK,OACLC,SAfiB,SAACoB,GACtBA,EAAMC,OAAOC,MAAMC,QACnBP,EAAiBI,EAAMC,OAAOC,MAAM,GAE5C,KAaIpD,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,YAAcC,SAAA,CAAC,SACtBC,EAAAA,EAAAA,KAAA,SAAM,cACCwC,EAAYU,SAAWV,EAAYU,SAAW,SAAS,KAAClD,EAAAA,EAAAA,KAAA,SAAM,uBACrDwC,EAAYW,QAAUX,EAAYW,QAAU,SAAS,KAACnD,EAAAA,EAAAA,KAAA,SAAM,kCACjDwC,EAAYY,eAAiBZ,EAAYa,0BAA4B,SAAS,KAACrD,EAAAA,EAAAA,KAAA,UAC/GA,EAAAA,EAAAA,KAAA,SAAM,kBACQA,EAAAA,EAAAA,KAAA,SAAM,QACdwC,EAAYc,SAASC,GAAKf,EAAYc,SAASC,GAAK,SAAS,KAACvD,EAAAA,EAAAA,KAAA,SAAM,cAC9DwC,EAAYc,SAASE,SAAWhB,EAAYc,SAASE,SAAW,SAAS,KAACxD,EAAAA,EAAAA,KAAA,SAAM,eAC/EwC,EAAYc,SAASG,UAAYjB,EAAYc,SAASG,UAAY,SAAS,KAACzD,EAAAA,EAAAA,KAAA,SAAM,YACrFwC,EAAYc,SAASI,OAASlB,EAAYc,SAASI,OAAS,SAAS,KAAC1D,EAAAA,EAAAA,KAAA,cAI5F,ECnCA,GAAgB,QAAU,0B,UCsC1B,EArCsB2D,EAAAA,MAAW,SAAAnE,GAA6C,IAA1CoE,EAAapE,EAAboE,cAAeC,EAAmBrE,EAAnBqE,oBAC/CC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAmCL,EAAAA,EAAAA,UAASH,GAAcS,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAMD,EAAA,GAAEE,EAAgBF,EAAA,IAE/BG,EAAAA,EAAAA,YAAU,kBAAMD,EAAiBX,EAAc,GAAE,CAACA,IAElD,IAaIa,EAaJ,OAVIA,EADJP,GACWlE,EAAAA,EAAAA,KAAA,SACH2B,MAAO2C,GAAkB,GACzB5C,SATgB,SAACoB,GACrByB,EAAiBzB,EAAMC,OAAOpB,MAClC,EAQQ+C,WAAW,EACX7C,OApBsB,WAC1BsC,GAAY,GACZN,EAAoBS,EACxB,KAkBWtE,EAAAA,EAAAA,KAAA,QACH2E,QAjBoB,WACxBR,GAAY,EAChB,EAeqCpE,SAC5B6D,GAAgC,mBAGlC5D,EAAAA,EAAAA,KAAA,OAAAD,SACF0E,GAET,ICnBA,EAXgB,SAAHjF,GAAwF,IAAlFgD,EAAWhD,EAAXgD,YAAaoB,EAAapE,EAAboE,cAAeC,EAAmBrE,EAAnBqE,oBAAqBnB,EAAgBlD,EAAhBkD,iBAAkBD,EAAOjD,EAAPiD,QAClF,OAAKD,GAGE5C,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,QAAUC,SAAA,EAC9BC,EAAAA,EAAAA,KAAC4E,EAAa,CAAChB,cAAeA,EAAeC,oBAAqBA,KAClE7D,EAAAA,EAAAA,KAAC6E,EAAW,CAACpC,QAASA,EAASC,iBAAkBA,EAAkBF,YAAaA,KAChFxC,EAAAA,EAAAA,KAAC8E,EAAc,CAACrF,kBAAmB+C,EAAYG,OAAOoC,YAL/C/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAS,GAOzB,E,oBCTMC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAxC,OAAAyC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAOjB,OAPiBN,EAAAF,EAAAS,KAAAC,MAAAV,EAAA,OAAAW,OAAAL,KAClBM,mBAAqB,WACjB,IAAIC,EAASX,EAAKY,MAAMC,MAAMF,OACzBA,IAAQA,EAASX,EAAKY,MAAME,kBAEjCd,EAAKY,MAAMG,eAAeJ,GAC1BX,EAAKY,MAAMI,iBAAiBL,EAChC,EAACX,CAAA,CAmBA,OAnBAiB,EAAAA,EAAAA,GAAAtB,EAAA,EAAAuB,IAAA,oBAAA7E,MAED,WACI8E,KAAKT,oBACT,GAAC,CAAAQ,IAAA,qBAAA7E,MAED,SAAmB+E,GACXA,EAAUP,MAAMF,SAAWQ,KAAKP,MAAMC,MAAMF,QAC5CQ,KAAKT,oBAEb,GAAC,CAAAQ,IAAA,SAAA7E,MAED,WACI,OAAO3B,EAAAA,EAAAA,KAAC2G,EAAO,CACXjE,iBAAkB+D,KAAKP,MAAMxD,iBAC7BD,SAAUgE,KAAKP,MAAMC,MAAMF,OAC3BrC,cAAe6C,KAAKP,MAAMtC,cAC1BC,oBAAqB4C,KAAKP,MAAMrC,oBAChCrB,YAAaiE,KAAKP,MAAM1D,aAChC,KAACyC,CAAA,CA1BiB,CAAStB,EAAAA,WA6BzBiD,GAAwBC,EAAAA,EAAAA,GAAiB5B,GAe/C,GAAe7C,EAAAA,EAAAA,KATS,SAACC,GACrB,MAAO,CACHG,YAAaH,EAAMC,eAAeE,YAClCoB,cAAevB,EAAMC,eAAesB,cACpCwC,iBAAkB/D,EAAMyE,YAAYtF,GACpCuF,OAAQ1E,EAAMyE,YAAYC,OAElC,GAEwC,CAAEV,eAAAA,EAAAA,GAAgBxC,oBAAAA,EAAAA,GAAqByC,iBAAAA,EAAAA,GAAkB5D,iBAAAA,EAAAA,IAAjG,EAbmB,SAACwD,GAChB,OAAOlG,EAAAA,EAAAA,KAAC4G,GAAqBI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKd,GAAK,IAAEC,OAAOc,EAAAA,EAAAA,QACpD,G,mJCpCMC,EAAkB,SAAC7E,GACrB,MAAO,CACH0E,OAAQ1E,EAAMyE,YAAYC,OAElC,EAEaF,EAAmB,SAACM,GAAe,IACtCC,EAAiB,SAAAlC,IAAAC,EAAAA,EAAAA,GAAAiC,EAAAlC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA+B,GAAA,SAAAA,IAAA,OAAA7B,EAAAA,EAAAA,GAAA,KAAA6B,GAAAhC,EAAAU,MAAA,KAAAL,UAAA,CAKlB,OALkBc,EAAAA,EAAAA,GAAAa,EAAA,EAAAZ,IAAA,SAAA7E,MACnB,WACI,OAAK8E,KAAKP,MAAMa,QAET/G,EAAAA,EAAAA,KAACmH,GAASH,EAAAA,EAAAA,GAAA,GAAKP,KAAKP,SAFIlG,EAAAA,EAAAA,KAACqH,EAAAA,GAAQ,CAACC,GAAG,UAGhD,KAACF,CAAA,CALkB,CAASzD,EAAAA,WAQhC,OAAOvB,EAAAA,EAAAA,IAAQ8E,EAAR9E,CAAyBgF,EACpC,C,sHChBaG,EAAmBC,EAAAA,KAAaC,MAAM,CAC/CC,MAAOF,EAAAA,KAEFE,MAAM,iCACNC,SAAS,mBACdC,SAAUJ,EAAAA,KAELK,IAAI,EAAG,sDACPC,QAVa,cAUU,CAAEC,QAAS,uCAClCJ,SAAS,sBACdK,WAAYR,EAAAA,OAIH7G,EAAqB6G,EAAAA,KAAaC,MAC3C,CACIhH,aAAc+G,EAAAA,KAETS,IAAI,GAAI,kDACRN,SAAS,eAITO,EAAwBV,EAAAA,KAAaC,MAAM,CACpDU,gBAAiBX,EAAAA,KAEZS,IAAI,GAAI,kDACRN,SAAS,c","sources":["components/profile/posts/Posts.module.css","webpack://my-app/./src/components/profile/posts/post/Post.module.css?3dbd","components/profile/posts/post/Post.jsx","webpack://my-app/./src/components/profile/posts/addPostForm/AddPostForm.module.css?0dd8","components/profile/posts/addPostForm/AddPostForm.jsx","components/profile/posts/Posts.jsx","components/profile/posts/PostsContainer.js","webpack://my-app/./src/components/profile/posts/profileInfo/ProfileInfo.module.css?4253","components/profile/posts/profileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/profile/Profile.module.css?5246","components/profile/profileStatus/ProfileStatus.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.js","hoc/withAuthRedirect.js","schemas/yupSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Post_avatar__wYY9I\",\"postText\":\"Post_postText__4Lm6J\",\"likesItem\":\"Post_likesItem__m3xyx\",\"postWrapper\":\"Post_postWrapper__5ROJz\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport defaultSmallUserPhoto from '../../../../resources/images/defaultSmallUserPhoto.jpeg';\r\n\r\nconst Post = ({ smallProfilePhoto, likesCount, text }) => {\r\n    return <div className={s.postWrapper}>\r\n        <div>\r\n            <img\r\n                src={smallProfilePhoto ? smallProfilePhoto : defaultSmallUserPhoto}\r\n                alt='profile avatar'\r\n                className={s.avatar} />\r\n            <span className={s.postText}>{text} </span>\r\n        </div>\r\n        <div className={s.likesItem}> likes: {likesCount}</div>\r\n    </div>;\r\n};\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"addPostFieldError\":\"AddPostForm_addPostFieldError__gHvw-\",\"errorMessage\":\"AddPostForm_errorMessage__xzbi9\"};","import React from \"react\";\r\nimport s from './AddPostForm.module.css';\r\nimport { useFormik } from \"formik\";\r\nimport { basicAddPostSchema } from \"../../../../schemas/yupSchema\";\r\n\r\nexport const AddPostForm = ({ addPost }) => {\r\n    const onSubmit = (values, actions) => {\r\n        addPost(values.addPostField);\r\n        actions.resetForm();\r\n    };\r\n\r\n    const { values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        initialValues: {\r\n            addPostField: '',\r\n        },\r\n        validationSchema: basicAddPostSchema,\r\n        onSubmit,\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <div className={s.textareaField}>\r\n                <textarea\r\n                    name=\"addPostField\"\r\n                    id=\"addPostField\"\r\n                    type=\"textarea\"\r\n                    onChange={handleChange}\r\n                    value={values.addPostField}\r\n                    placeholder=\"Share your news:)\"\r\n                    onBlur={handleBlur}\r\n                    className={errors.addPostField && touched.addPostField ? s.addPostFieldError : ''}\r\n                >\r\n                </textarea>\r\n                {errors.addPostField && touched.addPostField && <p className={s.errorMessage}>{errors.addPostField}</p>}\r\n            </div>\r\n            <div>\r\n                <button disabled={isSubmitting} type=\"submit\">add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport s from './Posts.module.css'\r\nimport Post from \"./post/Post\";\r\nimport { AddPostForm } from \"./addPostForm/AddPostForm\";\r\n\r\nconst Posts = ({ addPost, posts, smallProfilePhoto }) => {\r\n    return <div className={s.posts}>\r\n        My posts\r\n        <AddPostForm addPost={addPost} />\r\n        {\r\n            posts.map((obj, i) => {\r\n                return <Post\r\n                    key={obj.id}\r\n                    smallProfilePhoto={smallProfilePhoto}\r\n                    text={obj.text}\r\n                    likesCount={posts[i].likesCount}\r\n                />\r\n            })\r\n        }\r\n    </div>;\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPost })(Posts);","// extracted by mini-css-extract-plugin\nexport default {\"largeProfilePhoto\":\"ProfileInfo_largeProfilePhoto__YuZFa\",\"profileInfo\":\"ProfileInfo_profileInfo__KHMX6\"};","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport defaultLargeUserPhoto from '../../../../resources/images/defaultLargeUserPhoto.jpg';\r\n\r\nconst ProfileInfo = ({ profilePage, isOwner, saveProfilePhoto }) => {\r\n    const onProfilePhotoChange = (event) => {\r\n        if (event.target.files.length) {\r\n            saveProfilePhoto(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return <div className={s.profileInfoAndPhoto}>\r\n        <img\r\n            className={s.largeProfilePhoto}\r\n            alt='large profile avatar'\r\n            src={profilePage.photos.large ? profilePage.photos.large : defaultLargeUserPhoto} />\r\n        {\r\n            isOwner &&\r\n            <input\r\n                type='file'\r\n                onChange={onProfilePhotoChange} />\r\n        }\r\n        <div className={s.profileInfo}>\r\n            Hey! <br />\r\n            My name is {profilePage.fullName ? profilePage.fullName : 'none:)'} <br />\r\n            Some info about me: {profilePage.aboutMe ? profilePage.aboutMe : 'none:)'} <br />\r\n            Looking for a job description: {profilePage.lookingForAJob ? profilePage.lookingForAJobDescription : 'none:)'} <br />\r\n            <br />\r\n            My contacts:  <br />\r\n            vk - {profilePage.contacts.vk ? profilePage.contacts.vk : 'none:)'} <br />\r\n            facebook - {profilePage.contacts.facebook ? profilePage.contacts.facebook : 'none:)'} <br />\r\n            instagram - {profilePage.contacts.instagram ? profilePage.contacts.instagram : 'none:)'} <br />\r\n            github - {profilePage.contacts.github ? profilePage.contacts.github : 'none:)'} <br />\r\n\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"mainPic\":\"Profile_mainPic__9UGwW\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatus = React.memo(({ profileStatus, updateProfileStatus }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setProfileStatus] = useState(profileStatus);\r\n\r\n    useEffect(() => setProfileStatus(profileStatus), [profileStatus]);\r\n\r\n    const deactivateStatusField = () => {\r\n        setEditMode(false);\r\n        updateProfileStatus(status);\r\n    };\r\n\r\n    const activateStatusField = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const onChangeHandler = (event) => {\r\n        setProfileStatus(event.target.value);\r\n    };\r\n\r\n    let elem;\r\n\r\n    editMode ?\r\n        elem = <input\r\n            value={status ? status : ''}\r\n            onChange={onChangeHandler}\r\n            autoFocus={true}\r\n            onBlur={deactivateStatusField} /> :\r\n        elem = <span\r\n            onClick={activateStatusField}>\r\n            {profileStatus ? profileStatus : 'defaultStatus'}\r\n        </span>;\r\n\r\n    return <div>\r\n        {elem}\r\n    </div>;\r\n});\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport Preloader from \"../common components/preloader/Preloader\";\r\nimport PostsContainer from \"./posts/PostsContainer\";\r\nimport ProfileInfo from \"./posts/profileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css';\r\nimport ProfileStatus from \"./profileStatus/ProfileStatus\";\r\n\r\nconst Profile = ({ profilePage, profileStatus, updateProfileStatus, saveProfilePhoto, isOwner }) => {\r\n    if (!profilePage) {\r\n        return <Preloader />;\r\n    }\r\n    return <main className={s.content}>\r\n        <ProfileStatus profileStatus={profileStatus} updateProfileStatus={updateProfileStatus} />\r\n        <ProfileInfo isOwner={isOwner} saveProfilePhoto={saveProfilePhoto} profilePage={profilePage} />\r\n        <PostsContainer smallProfilePhoto={profilePage.photos.small} />\r\n    </main>;\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getProfilePage, updateProfileStatus, getProfileStatus, saveProfilePhoto } from '../../redux/profileReducer';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfilePage = () => {\r\n        let userId = this.props.param.userId;\r\n        if (!userId) userId = this.props.authorizedUserId;\r\n\r\n        this.props.getProfilePage(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfilePage();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.param.userId !== this.props.param.userId) {\r\n            this.refreshProfilePage();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            saveProfilePhoto={this.props.saveProfilePhoto}\r\n            isOwner={!this.props.param.userId}\r\n            profileStatus={this.props.profileStatus}\r\n            updateProfileStatus={this.props.updateProfileStatus}\r\n            profilePage={this.props.profilePage} />;\r\n    }\r\n}\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nconst TakeParams = (props) => {\r\n    return <AuthRedirectComponent {...props} param={useParams()} />\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profileReducer.profilePage,\r\n        profileStatus: state.profileReducer.profileStatus,\r\n        authorizedUserId: state.authReducer.id,\r\n        isAuth: state.authReducer.isAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProfilePage, updateProfileStatus, getProfileStatus, saveProfilePhoto })(TakeParams);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />;\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};","import * as yup from 'yup';\r\n\r\nconst passwordRules = /(?=.*[0-9])/;\r\n\r\nexport const basicLoginSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email('Please enter the valid email.')\r\n        .required('Email required.'),\r\n    password: yup\r\n        .string()\r\n        .min(5, 'Password is too short - should be 5 chars minimum.')\r\n        .matches(passwordRules, { message: 'Please create a stronger password.' })\r\n        .required('Password required.'),\r\n    rememberMe: yup\r\n        .boolean(),\r\n});\r\n\r\nexport const basicAddPostSchema = yup.object().shape(\r\n    {\r\n        addPostField: yup\r\n            .string()\r\n            .max(50, 'Text is too long - should be 50 chars maximum.')\r\n            .required('Required.')\r\n    },\r\n);\r\n\r\nexport const basicAddMessageSchema = yup.object().shape({\r\n    addMessageField: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.')\r\n        .required('Required.')\r\n});\r\n\r\n"],"names":["_ref","smallProfilePhoto","likesCount","text","_jsxs","className","s","children","_jsx","src","defaultSmallUserPhoto","alt","AddPostForm","addPost","_useFormik","useFormik","initialValues","addPostField","validationSchema","basicAddPostSchema","onSubmit","values","actions","resetForm","errors","touched","isSubmitting","handleChange","handleBlur","handleSubmit","autoComplete","name","id","type","onChange","value","placeholder","onBlur","disabled","posts","map","obj","i","Post","connect","state","profileReducer","Posts","profilePage","isOwner","saveProfilePhoto","photos","large","defaultLargeUserPhoto","event","target","files","length","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","vk","facebook","instagram","github","React","profileStatus","updateProfileStatus","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","status","setProfileStatus","useEffect","elem","autoFocus","onClick","ProfileStatus","ProfileInfo","PostsContainer","small","Preloader","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","refreshProfilePage","userId","props","param","authorizedUserId","getProfilePage","getProfileStatus","_createClass","key","this","prevProps","Profile","AuthRedirectComponent","withAuthRedirect","authReducer","isAuth","_objectSpread","useParams","mapStateToProps","Component","RedirectComponent","Navigate","to","basicLoginSchema","yup","shape","email","required","password","min","matches","message","rememberMe","max","basicAddMessageSchema","addMessageField"],"sourceRoot":""}