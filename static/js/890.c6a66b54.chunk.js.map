{"version":3,"file":"static/js/890.c6a66b54.chunk.js","mappings":"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","sources":["components/common components/defaultLoginFormInput/InputField.jsx","webpack://my-app/./src/components/loginPage/loginForm/LoginForm.module.css?96d1","components/loginPage/loginForm/LoginForm.jsx","components/loginPage/LoginPage.jsx","components/profile/posts/profileInfo/userInfoForm/UserInfoForm.jsx","components/profile/posts/profileInfo/userInfo/UserInfo.jsx","schemas/yupSchema.js","webpack://my-app/./src/components/profile/posts/profileInfo/userInfo/UserInfo.module.css?df53"],"sourcesContent":["import React from \"react\";\r\nimport s from '../../../components/profile/posts/profileInfo/userInfo/UserInfo.module.css';\r\nimport '../../../common_styles/validationErrors.css';\r\nimport '../../../common_styles/input.css';\r\n\r\nconst InputField = ({ id, name, type,\r\n    placeholder = null, handleChange, handleBlur,\r\n    errors, touched, values, text = '' }) => {\r\n    let elem;\r\n\r\n    switch (type) {\r\n        case \"checkbox\": {\r\n            elem = <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                onChange={handleChange}\r\n                checked={values[name]}\r\n                placeholder={placeholder}\r\n                onBlur={handleBlur}\r\n            />;\r\n            break;\r\n        }\r\n\r\n        case 'password':\r\n        case 'email':\r\n        case 'text':\r\n        case 'textarea':\r\n        default:\r\n            elem = <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                onChange={handleChange}\r\n                value={values[name]}\r\n                placeholder={placeholder}\r\n                onBlur={handleBlur}\r\n                className={errors[name] && touched[name] ? 'inputError' : 'inputField'}\r\n                maxLength={49}\r\n            />;\r\n            break;\r\n    }\r\n    return (\r\n        <div className={s.profileInfoList}>\r\n            <label\r\n                className={s.title}\r\n                htmlFor={type}>\r\n                {text}\r\n            </label>\r\n            {elem}\r\n            {errors[name] && touched[name] &&\r\n                <div className='errorMessage'>{errors[name]}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;","// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"LoginForm_loginPage__8AE7M\",\"loginFormWrapper\":\"LoginForm_loginFormWrapper__YAAqh\",\"loginButton\":\"LoginForm_loginButton__Tiywx\",\"loginImage\":\"LoginForm_loginImage__a5xuK\",\"loginAccessField\":\"LoginForm_loginAccessField__BBaXz\",\"accessData\":\"LoginForm_accessData__faXRZ\"};","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport { basicLoginSchema } from \"../../../schemas/yupSchema\";\r\nimport s from './LoginForm.module.css';\r\nimport InputField from \"../../common components/defaultLoginFormInput/InputField\";\r\nimport { ServerErrorMessage } from \"../../profile/posts/profileInfo/userInfoForm/UserInfoForm\";\r\nimport '../../../common_styles/button.css';\r\nimport { MainAbstract } from \"../../profile/posts/profileInfo/userInfo/UserInfo\";\r\n\r\nexport const LoginForm = ({ login, captchaURL }) => {\r\n\r\n    const onSubmit = (values, { setSubmitting, setStatus }) => {\r\n        setSubmitting(true);\r\n        login(values.email, values.password, values.rememberMe, values.captcha, setStatus, setSubmitting);\r\n        /*   resetForm(); */\r\n    };\r\n\r\n    const { values, status, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: true,\r\n            captcha: '',\r\n        },\r\n        validationSchema: basicLoginSchema,\r\n        onSubmit,\r\n    });\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <MainAbstract text='Verification' />\r\n            <form className={s.loginFormWrapper} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <InputField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder={\"Enter your email\"}\r\n                    handleChange={handleChange}\r\n                    handleBlur={handleBlur}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    values={values}\r\n                    text=\"Email: \"\r\n                />\r\n                <InputField\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder={\"Enter your password\"}\r\n                    handleChange={handleChange}\r\n                    handleBlur={handleBlur}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    values={values}\r\n                    text=\"Password: \"\r\n                />\r\n                <InputField\r\n                    id=\"rememberMe\"\r\n                    name=\"rememberMe\"\r\n                    type=\"checkbox\"\r\n                    handleChange={handleChange}\r\n                    handleBlur={handleBlur}\r\n                    errors={errors}\r\n                    touched={touched}\r\n                    values={values}\r\n                    text=\"Remember Me? \"\r\n                />\r\n                <ServerErrorMessage status={status} />\r\n                {\r\n                    captchaURL &&\r\n                    <>\r\n                        <img\r\n                            className={s.loginImage}\r\n                            alt='captcha'\r\n                            src={captchaURL}\r\n                        />\r\n                        <InputField\r\n                            id=\"captcha\"\r\n                            name=\"captcha\"\r\n                            type=\"text\"\r\n                            placeholder={\"picture values\"}\r\n                            handleChange={handleChange}\r\n                            handleBlur={handleBlur}\r\n                            errors={errors}\r\n                            touched={touched}\r\n                            values={values}\r\n                            text=\"Verification code: \"\r\n                        />\r\n                    </>\r\n                }\r\n                <button\r\n                    className={`defaultWebsiteButton ${s.loginButton}`}\r\n                    disabled={isSubmitting}\r\n                    type=\"submit\">\r\n                    Sign Up\r\n                </button>\r\n            </form>\r\n            <div className={s.accessDataWrapper}>\r\n                <p className={s.loginAccessField}>Access Email:\r\n                    <span className={s.accessData}> free@samuraijs.com</span>\r\n                </p>\r\n                <p className={s.loginAccessField}>Access Password:\r\n                    <span className={s.accessData}> free</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { LoginForm } from \"./loginForm/LoginForm\";\r\n\r\nconst LoginPage = ({ isAuth, login, captchaURL }) => {\r\n    if (isAuth) {\r\n        return <Navigate to='/profile' />;\r\n    }\r\n\r\n    return <LoginForm captchaURL={captchaURL} login={login} />\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n        captchaURL: state.authReducer.captchaURL,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(LoginPage);","import React from \"react\";\r\nimport s from '../userInfo/UserInfo.module.css';\r\nimport { useFormik } from 'formik';\r\nimport { basicProfileInfoChanger } from \"../../../../../schemas/yupSchema\";\r\nimport InputField from \"../../../../common components/defaultLoginFormInput/InputField\";\r\nimport '../../../../../common_styles/button.css';\r\nimport '../../../../../common_styles/validationErrors.css';\r\nimport { MainAbstract } from \"../userInfo/UserInfo\";\r\n\r\nconst UserInfoForm = ({ profilePage, setEditMode, saveProfileChanges }) => {\r\n    const onSubmit = (values, { setSubmitting, setStatus }) => {\r\n        setSubmitting(true);\r\n        saveProfileChanges(values, setStatus, setSubmitting)\r\n            .then(() => {\r\n                setEditMode(false);\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const { values, status, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            fullName: profilePage.fullName || '',\r\n            aboutMe: profilePage.aboutMe || '',\r\n            lookingForAJob: profilePage.lookingForAJob || false,\r\n            lookingForAJobDescription: profilePage.lookingForAJobDescription || '',\r\n            contacts: {\r\n                facebook: profilePage.contacts.facebook || '',\r\n                website: profilePage.contacts.website || '',\r\n                vk: profilePage.contacts.vk || '',\r\n                twitter: profilePage.contacts.twitter || '',\r\n                instagram: profilePage.contacts.instagram || '',\r\n                youtube: profilePage.contacts.youtube || '',\r\n                github: profilePage.contacts.github || '',\r\n                mainLink: profilePage.contacts.mainLink || '',\r\n            },\r\n        },\r\n        validationSchema: basicProfileInfoChanger,\r\n        onSubmit,\r\n    });\r\n\r\n    return <form onSubmit={handleSubmit} autoComplete=\"off\" className={s.profileInfo}>\r\n        <MainAbstract />\r\n        <InputField\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            type=\"text\"\r\n            placeholder={\"Enter nickName\"}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"Nickname: \"\r\n        />\r\n        <InputField\r\n            id=\"aboutMe\"\r\n            name=\"aboutMe\"\r\n            type=\"text\"\r\n            placeholder={\"Enter smth about you\"}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"General info about me: \"\r\n        />\r\n        <InputField\r\n            id=\"lookingForAJob\"\r\n            name=\"lookingForAJob\"\r\n            type=\"checkbox\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"Looking for a job? \"\r\n        />\r\n        <InputField\r\n            id=\"lookingForAJobDescription\"\r\n            name=\"lookingForAJobDescription\"\r\n            type=\"text\"\r\n            placeholder={\"Describe the job\"}\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            errors={errors}\r\n            touched={touched}\r\n            values={values}\r\n            text=\"Info about the job: \"\r\n        />\r\n        <div className={s.profileInfoList}>\r\n            <span className={s.title}>My contacts: </span>\r\n            {\r\n                Object.keys(profilePage.contacts).map((key, i) => {\r\n                    return <div className={s.contact} key={i}>\r\n                        {key} - <input\r\n                            id={key}\r\n                            name={`contacts.${key}`}\r\n                            type=\"text\"\r\n                            placeholder={`Input ${key}`}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={errors.contacts?.[key] && touched.contacts?.[key] ? 'inputError' : 'inputField'}\r\n                            value={values.contacts[key]}\r\n                            maxLength={50}\r\n                        />\r\n                        {\r\n                            errors.contacts?.[key] &&\r\n                            touched.contacts?.[key] &&\r\n                            <div className='errorMessage'>{errors.contacts?.[key]}</div>\r\n                        }\r\n                    </div>;\r\n                })\r\n            }\r\n        </div>\r\n        <ServerErrorMessage status={status} />\r\n        <DefautButton text='Save' isSubmitting={isSubmitting} />\r\n    </form>;\r\n};\r\n\r\nexport const DefautButton = ({ text, isSubmitting }) => {\r\n    return <button\r\n        className=\"defaultWebsiteButton\"\r\n        disabled={isSubmitting}\r\n        type=\"submit\">\r\n        {text}\r\n    </button>\r\n};\r\n\r\nexport const ServerErrorMessage = ({ status }) => {\r\n    return status && <div className={'errorMessage'}>\r\n        {status}\r\n    </div>;\r\n};\r\n\r\nexport default UserInfoForm;","import React from \"react\";\r\nimport s from './UserInfo.module.css';\r\nimport '../../../../../common_styles/button.css';\r\n\r\nconst UserInfo = ({ profilePage, isOwner, setEditMode }) => {\r\n    const onEditUserInfoClick = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    return <div className={s.profileInfo}>\r\n        <MainAbstract text='Profile Information' />\r\n        <ProfileInfoList\r\n            text='Nickname:'\r\n            listValue={profilePage.fullName || 'none:)'}\r\n        />\r\n        <ProfileInfoList\r\n            text='General info about me:'\r\n            listValue={profilePage.aboutMe || 'none:)'}\r\n        />\r\n        <ProfileInfoList\r\n            text=\"Info about the job:\"\r\n            listValue={profilePage.lookingForAJob ? profilePage.lookingForAJobDescription : 'none:)'}\r\n        />\r\n        <ProfileInfoList\r\n            text=\"My contacts:\"\r\n            listValue={\r\n                Object.keys(profilePage.contacts).map((key, i) => {\r\n                    return <Contact key={i} contactTitle={key} contactValue={profilePage.contacts[key]} />;\r\n                })\r\n            }\r\n        />\r\n        {isOwner &&\r\n            <button\r\n                onClick={onEditUserInfoClick}\r\n                className=\"defaultWebsiteButton\"\r\n            >\r\n                Edit\r\n            </button>}\r\n    </div>;\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}>\r\n        {contactTitle} - {contactValue || 'none:)'}\r\n    </div>;\r\n};\r\n\r\nconst ProfileInfoList = ({ text, listValue }) => {\r\n    return <div className={s.profileInfoList}>\r\n        <span className={s.title}>{text} </span>{listValue}\r\n    </div>;\r\n};\r\n\r\nexport const MainAbstract = ({ text }) => {\r\n    return <div className={s.mainAbstract}>\r\n        {text}\r\n    </div>;\r\n};\r\n\r\nexport default UserInfo;","import * as yup from 'yup';\r\n\r\nexport const basicLoginSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email('Please enter the valid email.')\r\n        .required('Email required.'),\r\n    password: yup\r\n        .string()\r\n        .min(3, 'Password is too short - should be 3 chars minimum.')\r\n        .required('Password required.'),\r\n    rememberMe: yup\r\n        .boolean(),\r\n});\r\n\r\nexport const basicAddPostSchema = yup.object().shape(\r\n    {\r\n        addPostField: yup\r\n            .string()\r\n            .max(50, 'Text is too long - should be 50 chars maximum.')\r\n            .required('Required.')\r\n    },\r\n);\r\n\r\nexport const basicAddMessageSchema = yup.object().shape({\r\n    addMessageField: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.')\r\n        .required('Required.')\r\n});\r\n\r\nexport const basicProfileInfoChanger = yup.object().shape({\r\n    fullName: yup\r\n        .string()\r\n        .max(15, 'Nickname is too long - should be 15 chars maximum.'),\r\n    aboutMe: yup\r\n        .string()\r\n        .max(50, 'General info is too long - should be 50 chars maximum.'),\r\n    lookingForAJob: yup\r\n        .boolean(),\r\n    lookingForAJobDescription: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.'),\r\n});\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"UserInfo_profileInfo__sk3oM\",\"profileInfoList\":\"UserInfo_profileInfoList__pmYjE\",\"mainAbstract\":\"UserInfo_mainAbstract__vr-kB\",\"title\":\"UserInfo_title__DTwwC\",\"contact\":\"UserInfo_contact__4rq4v\"};"],"names":["_ref","elem","id","name","type","_ref$placeholder","placeholder","handleChange","handleBlur","errors","touched","values","_ref$text","text","_jsx","onChange","checked","onBlur","value","className","maxLength","_jsxs","s","children","htmlFor","LoginForm","login","captchaURL","_useFormik","useFormik","initialValues","email","password","rememberMe","captcha","validationSchema","basicLoginSchema","onSubmit","_ref2","setSubmitting","setStatus","status","isSubmitting","handleSubmit","MainAbstract","autoComplete","InputField","ServerErrorMessage","_Fragment","alt","src","concat","disabled","connect","state","isAuth","authReducer","Navigate","to","DefautButton","_ref3","_ref4","profilePage","setEditMode","saveProfileChanges","enableReinitialize","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","basicProfileInfoChanger","then","catch","Object","keys","map","key","i","_errors$contacts","_touched$contacts","_errors$contacts2","_touched$contacts2","_errors$contacts3","Contact","contactTitle","contactValue","ProfileInfoList","listValue","isOwner","onClick","yup","shape","required","min","basicAddPostSchema","addPostField","max","basicAddMessageSchema","addMessageField"],"sourceRoot":""}