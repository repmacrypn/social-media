{"version":3,"file":"static/js/370.3e6ca1a0.chunk.js","mappings":"0NACA,GAAgB,aAAe,iCCA/B,EAA6B,+BAA7B,EAAyE,+BAAzE,EAAuH,iC,SCoBvH,EAlBmB,SAAHA,GAA4F,IAAtFC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAAMC,EAAWJ,EAAXI,YAAaC,EAAYL,EAAZK,aAAcC,EAAUN,EAAVM,WAAYC,EAAMP,EAANO,OAAQC,EAAOR,EAAPQ,QAASC,EAAMT,EAANS,OAC1F,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,QAASZ,EAAKU,SAAC,YACtBC,EAAAA,EAAAA,KAAA,SACIb,GAAIA,EACJC,KAAMA,EACNC,KAAMA,EACNa,SAAUX,EACVY,MAAOR,EAAOP,GACdE,YAAaA,EACbc,OAAQZ,EACRK,UAAWJ,EAAOL,IAASM,EAAQN,GAAQU,EAAe,KAC7DL,EAAOL,IAASM,EAAQN,KAASY,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAeC,SAAEN,EAAOL,OAGpF,ECbaiB,EAAY,SAAHnB,GAAmB,IAAboB,EAAKpB,EAALoB,MAQxBC,GAAkGC,EAAAA,EAAAA,IAAU,CACxGC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEhBC,iBAAkBC,EAAAA,GAClBC,SAba,SAACpB,EAAMqB,GAA+C,IAA3CC,EAAaD,EAAbC,cAAeC,EAASF,EAATE,UAAWC,EAASH,EAATG,UAClDF,GAAc,GACdX,GAAKc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIzB,GAAM,IAAEuB,UAAWA,EAAWD,cAAeA,KACxDE,GACJ,IAEQxB,EAAMY,EAANZ,OAAQ0B,EAAMd,EAANc,OAAQ5B,EAAMc,EAANd,OAAQC,EAAOa,EAAPb,QAAS4B,EAAYf,EAAZe,aAAc/B,EAAYgB,EAAZhB,aAAcC,EAAUe,EAAVf,WAAY+B,EAAYhB,EAAZgB,aAUjF,OACI3B,EAAAA,EAAAA,MAAA,QAAMmB,SAAUQ,EAAcC,aAAa,MAAKzB,SAAA,EAC5CC,EAAAA,EAAAA,KAACyB,EAAU,CACPtC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAa,mBACbC,aAAcA,EACdC,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTC,OAAQA,KAEZK,EAAAA,EAAAA,KAACyB,EAAU,CACPtC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,YAAa,sBACbC,aAAcA,EACdC,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTC,OAAQA,IAGR0B,IACArB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,aAAeC,SAC1BsB,KAGTzB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,cAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SACIb,GAAG,aACHC,KAAK,aACLC,KAAK,WACLa,SAAUX,EACVmC,QAAS/B,EAAOiB,WAChBR,OAAQZ,EACRK,UAAWJ,EAAOmB,YAAclB,EAAQkB,WAAad,EAAAA,WAAe,KAAM,oBAElFE,EAAAA,EAAAA,KAAA,UAAQ2B,SAAUL,EAAcjC,KAAK,SAAQU,SAAC,cAG1D,EC7CA,GAAe6B,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,YAAYD,OAElC,GAEwC,CAAExB,MAAAA,EAAAA,IAA1C,EAhBkB,SAAHpB,GAA2B,IAArB4C,EAAM5C,EAAN4C,OAAQxB,EAAKpB,EAALoB,MACzB,OAAIwB,GACO9B,EAAAA,EAAAA,KAACgC,EAAAA,GAAQ,CAACC,GAAG,cAGjBjC,EAAAA,EAAAA,KAAA,OAAAD,UACHC,EAAAA,EAAAA,KAACK,EAAS,CAACC,MAAOA,KAE1B,G,sHCVaQ,EAAmBoB,EAAAA,KAAaC,MAAM,CAC/CzB,MAAOwB,EAAAA,KAEFxB,MAAM,iCACN0B,SAAS,mBACdzB,SAAUuB,EAAAA,KAELG,IAAI,EAAG,sDACPC,QAVa,cAUU,CAAEC,QAAS,uCAClCH,SAAS,sBACdxB,WAAYsB,EAAAA,OAIHM,EAAqBN,EAAAA,KAAaC,MAC3C,CACIM,aAAcP,EAAAA,KAETQ,IAAI,GAAI,kDACRN,SAAS,eAITO,EAAwBT,EAAAA,KAAaC,MAAM,CACpDS,gBAAiBV,EAAAA,KAEZQ,IAAI,GAAI,kDACRN,SAAS,c","sources":["webpack://my-app/./src/components/loginPage/loginForm/LoginForm.module.css?96d1","webpack://my-app/./src/components/common components/defaultLoginFormInput/InputField.module.css?3541","components/common components/defaultLoginFormInput/InputField.jsx","components/loginPage/loginForm/LoginForm.jsx","components/loginPage/LoginPage.jsx","schemas/yupSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"LoginForm_errorMessage__8XfGc\"};","// extracted by mini-css-extract-plugin\nexport default {\"InputField\":\"InputField_InputField__-AAGd\",\"inputError\":\"InputField_inputError__IqH1J\",\"errorMessage\":\"InputField_errorMessage__b59HU\"};","import React from \"react\";\r\nimport s from './InputField.module.css';\r\n\r\nconst InputField = ({ id, name, type, placeholder, handleChange, handleBlur, errors, touched, values }) => {\r\n    return (\r\n        <div className={s.InputField}>\r\n            <label htmlFor={type}>Email </label>\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                onChange={handleChange}\r\n                value={values[name]}\r\n                placeholder={placeholder}\r\n                onBlur={handleBlur}\r\n                className={errors[name] && touched[name] ? s.inputError : ''} />\r\n            {errors[name] && touched[name] && <p className={s.errorMessage}>{errors[name]}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport { basicLoginSchema } from \"../../../schemas/yupSchema\";\r\nimport s from './LoginForm.module.css';\r\nimport InputField from \"../../common components/defaultLoginFormInput/InputField\";\r\n\r\nexport const LoginForm = ({ login }) => {\r\n\r\n    const onSubmit = (values, { setSubmitting, setStatus, resetForm }) => {\r\n        setSubmitting(true);\r\n        login({ ...values, setStatus: setStatus, setSubmitting: setSubmitting });\r\n        resetForm();\r\n    };\r\n\r\n    const { values, status, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit } = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: true,\r\n        },\r\n        validationSchema: basicLoginSchema,\r\n        onSubmit,\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <InputField\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder={\"Enter your email\"}\r\n                handleChange={handleChange}\r\n                handleBlur={handleBlur}\r\n                errors={errors}\r\n                touched={touched}\r\n                values={values}\r\n            />\r\n            <InputField\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder={\"Enter your password\"}\r\n                handleChange={handleChange}\r\n                handleBlur={handleBlur}\r\n                errors={errors}\r\n                touched={touched}\r\n                values={values}\r\n            />\r\n            {\r\n                status &&\r\n                <div className={s.errorMessage}>\r\n                    {status}\r\n                </div>\r\n            }\r\n            <div className={s.checkBoxField}>\r\n                <input\r\n                    id=\"rememberMe\"\r\n                    name=\"rememberMe\"\r\n                    type=\"checkbox\"\r\n                    onChange={handleChange}\r\n                    checked={values.rememberMe}\r\n                    onBlur={handleBlur}\r\n                    className={errors.rememberMe && touched.rememberMe ? s.inputError : ''} /> Remember Me?\r\n            </div>\r\n            <button disabled={isSubmitting} type=\"submit\">Sign Up</button>\r\n        </form>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { LoginForm } from \"./loginForm/LoginForm\";\r\n\r\nconst LoginPage = ({ isAuth, login }) => {\r\n    if (isAuth) {\r\n        return <Navigate to='/profile' />;\r\n    }\r\n\r\n    return <div>\r\n        <LoginForm login={login} />\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(LoginPage);","import * as yup from 'yup';\r\n\r\nconst passwordRules = /(?=.*[0-9])/;\r\n\r\nexport const basicLoginSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email('Please enter the valid email.')\r\n        .required('Email required.'),\r\n    password: yup\r\n        .string()\r\n        .min(5, 'Password is too short - should be 5 chars minimum.')\r\n        .matches(passwordRules, { message: 'Please create a stronger password.' })\r\n        .required('Password required.'),\r\n    rememberMe: yup\r\n        .boolean(),\r\n});\r\n\r\nexport const basicAddPostSchema = yup.object().shape(\r\n    {\r\n        addPostField: yup\r\n            .string()\r\n            .max(50, 'Text is too long - should be 50 chars maximum.')\r\n            .required('Required.')\r\n    },\r\n);\r\n\r\nexport const basicAddMessageSchema = yup.object().shape({\r\n    addMessageField: yup\r\n        .string()\r\n        .max(50, 'Text is too long - should be 50 chars maximum.')\r\n        .required('Required.')\r\n});\r\n\r\n"],"names":["_ref","id","name","type","placeholder","handleChange","handleBlur","errors","touched","values","_jsxs","className","s","children","_jsx","htmlFor","onChange","value","onBlur","LoginForm","login","_useFormik","useFormik","initialValues","email","password","rememberMe","validationSchema","basicLoginSchema","onSubmit","_ref2","setSubmitting","setStatus","resetForm","_objectSpread","status","isSubmitting","handleSubmit","autoComplete","InputField","checked","disabled","connect","state","isAuth","authReducer","Navigate","to","yup","shape","required","min","matches","message","basicAddPostSchema","addPostField","max","basicAddMessageSchema","addMessageField"],"sourceRoot":""}